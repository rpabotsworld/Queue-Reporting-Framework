<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="In_StrQueueName" Type="InArgument(x:String)" />
    <x:Property Name="in_DtmFrom" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_DtmTo" Type="InArgument(s:DateTime)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>915.2,2495.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="26">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="48">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="925.6,2430.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="StrCredentialName" />
      <Variable x:TypeArguments="x:String" Name="StrOrchestratorAuthToken" />
      <Variable x:TypeArguments="x:String" Name="StrUserName" />
      <Variable x:TypeArguments="ss:SecureString" Name="SecPassword" />
      <Variable x:TypeArguments="x:String" Name="StrOrchestratorServer" />
      <Variable x:TypeArguments="x:String" Name="StrQueueDefinitionId" />
      <Variable x:TypeArguments="njl:JObject" Name="JsonOutput" />
      <Variable x:TypeArguments="sd:DataTable" Name="DtReporting" />
      <Variable x:TypeArguments="x:Boolean" Name="FileExists" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="884,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Started Process for Reporting &quot;]" />
    <Assign sap:VirtualizedContainerService.HintSize="884,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[StrCredentialName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("CredentialName").toString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="884,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[StrOrchestratorServer]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("OrchestratorServer").toString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:Comment DisplayName="Comment (placeholder)" sap:VirtualizedContainerService.HintSize="884,56" sap2010:WorkflowViewState.IdRef="Comment_1" Text="//  Invoke steps of the process" />
    <If Condition="[String.IsNullOrEmpty(StrCredentialName)]" sap:VirtualizedContainerService.HintSize="884,821.6" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="420,672" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:Comment sap:VirtualizedContainerService.HintSize="378.4,132.8" sap2010:WorkflowViewState.IdRef="Comment_2" Text="//This Part is Written for On-perm Orch.  in Case you need to work Upon with Community edition Change Url and Authentication Params accrodingly ....As Community edition Works with Client keys" />
          <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[StrCredentialName]" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="378.4,22.4" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[SecPassword]" Username="[StrUserName]" />
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="378.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Orchestrator\Auth\OrchestratorAPI_Authenticate.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrOrchestratorUserName">[StrUserName]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_StrOrchestratorAuthToken">[StrOrchestratorAuthToken]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrOrchestratorServer">[StrOrchestratorServer]</InArgument>
              <InArgument x:TypeArguments="ss:SecureString" x:Key="in_SecStrOrchestratorPassword">[SecPassword]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_TenancyName">default</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="378.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Orchestrator\Auth\OrchestratorAPI_FindQueueIdByName.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="In_StrOrchestratorURL">[StrOrchestratorServer]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_StrQueueName">[In_StrQueueName]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="Out_IntQueueDefinitionId">[StrQueueDefinitionId]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_StrAuthToken">[StrOrchestratorAuthToken]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="378.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Orchestrator\Auth\OrchestratorAPI_GetQueueItemsJson.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="s:DateTime" x:Key="in_DtmFrom">[Now.AddDays(-30)]</InArgument>
              <InArgument x:TypeArguments="s:DateTime" x:Key="in_DtmTo">[in_DtmTo]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrAuthToken">[StrOrchestratorAuthToken]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrQueueId">[StrQueueDefinitionId]</InArgument>
              <OutArgument x:TypeArguments="njl:JObject" x:Key="out_JsonOuput">[JsonOutput]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrOrchestratorServerURL">[StrOrchestratorAuthToken]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="420,308.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="378.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Orchestrator\NoAuth\OrchestratorAPI_NoAuth_FindQueueIdByName.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="In_StrQueueName">[In_StrQueueName]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="Out_IntQueueDefinitionId">[StrQueueDefinitionId]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="378.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Orchestrator\NoAuth\OrchestratorAPI_NoAuth_GetQueueItemsJson.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="njl:JObject" x:Key="Out_JsonOuput">[JsonOutput]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_StrQueueId">[StrQueueDefinitionId]</InArgument>
              <InArgument x:TypeArguments="s:DateTime" x:Key="In_DtmFrom">[Now.AddDays(-30)]</InArgument>
              <InArgument x:TypeArguments="s:DateTime" x:Key="In_DtmTo">[in_DtmTo]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Else>
    </If>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="884,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Orchestrator\BuildReportingDataTable.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="Out_DtReporting">[DtReporting]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="In_StrColumnMapping">data.intLineItemDbID , data.datePeriodTo ,Started, Ended, Status</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="884,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Orchestrator\FillReportingTable.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="In_StrColumnsMapping">data.intLineItemDbID , data.datePeriodTo ,Started, Ended, Status</InArgument>
        <InArgument x:TypeArguments="njl:JObject" x:Key="In_JsonInput">[JsonOutput]</InArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="InOut_DtReporting">[DtReporting]</InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="884,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Reporting Data Table is ready to write into file ... &quot;]" />
    <ui:WriteRange AddHeaders="True" DataTable="[DtReporting]" DisplayName="Write Report" sap:VirtualizedContainerService.HintSize="884,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Reporting" StartingCell="A1" WorkbookPath="Data\OutPut\Reports.xlsx">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteRange>
    <ui:PathExists DisplayName="Path Exists" Exists="[FileExists]" sap:VirtualizedContainerService.HintSize="884,90.4" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="Data\OutPut\Reports.xlsx" PathType="File" />
    <If Condition="[FileExists]" sap:VirtualizedContainerService.HintSize="884,296" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[in_Config(&quot;MailBody&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" IsBodyHtml="False" IsDraft="False" Subject="[in_Config(&quot;MailSubject&quot;).ToString]" To="[in_Config(&quot;MailAddress&quot;).ToString]">
          <ui:SendOutlookMail.Files>
            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
              <InArgument x:TypeArguments="x:String">Data\OutPut\Reports.xlsx</InArgument>
            </scg:List>
          </ui:SendOutlookMail.Files>
        </ui:SendOutlookMail>
      </If.Then>
    </If>
  </Sequence>
</Activity>